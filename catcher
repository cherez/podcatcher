#!/usr/bin/env python3

from queue import Queue, Empty
import requests
from xml.dom.minidom import parseString
import os, os.path
from urllib.parse import unquote, urlparse
import sys
from threading import Thread
import yaml

podcast_queue = Queue()

class CatcherThread(Thread):
    def run(self):
        while True:
            try:
                cast = podcast_queue.get(False)
            except Empty:
                #close when we're out of casts
                return
            cast.download()

class Podcast:
    def __init__(self, url, path):
        self.url = url
        self.path = path

    def download(self):
        print("Downloading {}".format(self.url))
        os.makedirs(self.path, exist_ok=True)
        r = requests.get(self.url)
        dom = parseString(r.text)
        enclosures = dom.getElementsByTagName('enclosure')
        files = []
        for i in enclosures:
            attributes = {j: i.attributes[j].value for j in i.attributes.keys()}
            files.append(File(self, attributes))
        files = reversed(files)
        for i in files:
            if i.downloaded(): #skip any files we already have
                continue
            i.download()


class File:
    def __init__(self, podcast, attributes):
        self.podcast = podcast
        self.attributes = attributes
        self.url = attributes['url']
        filename = os.path.split(urlparse(self.url).path)[1]
        filename = unquote(filename)
        self.path = os.path.join(podcast.path, filename)

    def downloaded(self):
        return os.path.exists(self.path)

    def download(self):
        print("Downloading {} from {}".format(self.path, self.url))
        request = requests.get(self.url)
        open(self.path, 'wb').write(request.content)

if __name__ == '__main__':
    home = os.path.expanduser("~")
    os.chdir(os.path.join(home, "podcasts"))
    try:
        config = yaml.load(open('podcasts.yaml'))
    except:
        sys.stderr.write("Failed to load config file")
        sys.exit(1)
    podcasts = []
    for i in config['podcasts']:
        if 'path' not in i or 'url' not in i:
            sys.stderr.write("Bad podcast defined in podcasts.yaml: {}".format(i))
            continue
        podcasts.append(Podcast(i['url'], i['path']))

    for i in podcasts:
        podcast_queue.put(i)

    for i in range(config.get('threads', 1)):
        CatcherThread().start()
